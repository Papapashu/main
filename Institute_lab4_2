#include <iostream>
#include <stdio.h>
#include <string.h>
#include <limits.h>

#define Kmax 20 //максимальное число структур
#define Lmax 81 //максимальная длина строки
#define FCLR while (getc(fin)!='\n') //пропуск символов до конца строки в файле

struct izd {char gorod[Lmax], name[Lmax], year[Lmax];};  //Структура издательств

struct book_struct  //Структура книг
 {
   char name[Lmax], autor;
   izd pr;
   int price, num_book;
 };


void zam(char *str)
{
 char *s;
 s=str;
 while (*s!='\n') s++;
 *s='\0';
}

void input (book_struct *book, int *k) //чтение данных из файла
{
 char s[81]; int i;
 FILE *fin;
 printf("Enter input-file name: "); gets(s);
 fin=fopen(s, "r");
 if (fin==NULL)
 {
     printf ("No such file\n");
     getchar();
 }
 else
 { //на первой строке в файле расположено число структур
     fscanf(fin, "%d", k);
     FCLR; //пропуск символов до конца строки файла
     for(i=0; i<*k; i++)
     { //каждое поле структуры занимает в файле отдельную строку
         fgets(book[i].name, Lmax, fin); zam(book[i].name);
         fscanf(fin, "%d", &book[i].price);
         fscanf(fin, "%d", &book[i].num_book);
         FCLR;
         book[i].autor=fgetc(fin);
         fgets(s, Lmax, fin);
         fgets(book[i].pr.gorod, Lmax, fin); zam(book[i].pr.gorod);
         fgets(book[i].pr.name, Lmax, fin); zam(book[i].pr.name);
         fgets(book[i].pr.year, Lmax, fin); zam(book[i].pr.year);
     }
    fclose(fin);
   }
 }




void output (book_struct *book, int k) //Вывод массива книг
 {
     int i;
     printf("list of Book sets: \n");
     for(i=0; i<k; i++)
     {
         printf("Book # %d\n", i+1);
         printf("Name: %s\n", book[i].name);
         printf("Price: %d\n", book[i].price);
         printf("Number of str: %d\n", book[i].num_book);
         printf("autor %c\n", book[i].autor);
         printf("City of izd: %s\n", book[i].pr.gorod);
         printf("Name of izd: %s\n", book[i].pr.name);
         printf("Relase year: %s\n", book[i].pr.year);
         printf("Press any key to continue...\n");
         getchar();//ожидание нажатия клавиши
      }
     printf("End of list\n");
     printf("Press any key to continue...\n");
 }

void search (book_struct *book, char mautor[][Lmax], int k, int *kg)
 {
     int minpage, j;
     scanf("%d",&minpage);
     for(int i=0; i<k; i++) //поиск необходимых авторов
     if (book[i].num_book>minpage)
     {
         for(j=0; j<*kg && strcmp(book[i].pr.gorod, mautor[j]); j++);
         if (j==*kg) //если отсутствует, запишем город в массив
         strcpy(mautor[(*kg)++], book[i].pr.gorod);
     }
 }


main()
{
 book_struct book[Kmax];
 int k, kg=0, i;
 char mautor[Kmax][Lmax];
 FILE *fout;
 input(book, &k); //ввод массива структур из файла
 output(book, k); //вывод массива структур на экран
 search(book, mautor, k, &kg); //поиск городов
 //вывод результата на экран и в файл
 fout=fopen("d:\\result.txt", "w");
 printf("Result:\n%d list of author:\n", kg);
 fprintf(fout, "Result:\n%d list of author:\n",kg);
 for (i=0; i<kg; i++)
 {
    puts(mautor[i]);
    fprintf(fout, "%s\n", mautor[i]);
 }
 fclose(fout);
 puts("Results saved in file: \"result.txt\"");
 return 0;
}
